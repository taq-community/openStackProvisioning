#cloud-config
package_update: true
packages:
  - docker.io
  - jq
  - default-jre
  - ufw
  - nginx
  - certbot
  - python3-certbot-nginx

users:
  - name: sviss
    groups: [docker, sudo]
    shell: /bin/bash
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    ssh_authorized_keys:
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHRbsFCqTfi53WzSID/lm1SydwZ1fIFsS7cZh0gpZ6Dp steve.vissault@inrs.ca

write_files:
  - path: /etc/nginx/sites-available/shinyproxy
    permissions: "0644"
    content: |
      map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
      }

      server {
        listen 80;
        server_name cloud.taq.info;

        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;

        client_max_body_size 100M;

        location / {
          proxy_pass         http://127.0.0.1:8080/;
          proxy_http_version 1.1;

          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection $connection_upgrade;

          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Proto $scheme;
        }
      }


  # Main ShinyProxy config (installed .deb reads /etc/shinyproxy/application.yml)
  - path: /etc/shinyproxy/application_deploy.yml
    permissions: "0644"
    owner: root:root
    content: |
      server:
        forward-headers-strategy: native
      proxy:
        title: Control app center
        logo-url: https://www.openanalytics.eu/shinyproxy/logo.png
        template-path: ./templates
        landing-page: /
        heartbeat-rate: 10000
        heartbeat-timeout: 3600000
        port: 8080
        authentication: simple
        admin-groups: admin
        hide-navbar: true
        container-log-path: /var/log/shinyproxy/container-logs
        # Example: 'simple' authentication configuration
        users:
          - name: tuan
            password: 2bchanged
            groups: scientists
          - name: julie
            password: 2bchanged
            groups: scientists
          - name: steve
            password: 2bchanged
            groups: [ scientists, admin ]
        docker:
          port-range-start: 20000
        specs:
          - id: barque
            display-name: BARQUE
            description: A Shiny application to run the BARQUE workflow.
            container-image: barque-app:prod
            access-groups: scientists 
      logging:
        file:
          name: /var/log/shinyproxy/shinyproxy.log

  - path: /etc/shinyproxy/templates/login.html
    permissions: "0644"
    owner: root:root
    content: |
      <!DOCTYPE html>
      <html xmlns:th="http://www.thymeleaf.org">
      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Login - ShinyProxy</title>
          
          <!-- Bootstrap 5 CSS -->
          <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
          
          <style>
              body {
                  background-color: #17537bff;
                  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
                  height: 100vh;
                  margin: 0;
                  display: flex;
                  align-items: center;
                  justify-content: center;
              }
              
              .login-container {
                  width: 100%;
                  max-width: 500px;
                  padding: 2rem;
              }
              
              .login-card {
                  background: white;
                  border-radius: 12px;
                  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
                  padding: 2.5rem;
                  text-align: center;
              }
              
              .login-logo {
                  width: 260px;
                  height: auto;
                  margin-bottom: 1.5rem;
              }
              
              .form-control {
                  border-radius: 8px;
                  padding: 0.75rem 1rem;
                  font-size: 1rem;
                  margin-bottom: 1rem;
                  border: 2px solid #e9ecef;
                  transition: all 0.3s ease;
              }
              
              .form-control:focus {
                  border-color: #17537bff;
                  box-shadow: 0 0 0 0.2rem rgba(23, 83, 123, 0.25);
              }
              
              .btn-login {
                  background-color: #17537bff;
                  border: none;
                  border-radius: 8px;
                  padding: 0.75rem 2rem;
                  font-size: 1rem;
                  font-weight: 600;
                  width: 100%;
                  margin-top: 1rem;
                  transition: all 0.3s ease;
              }
              
              .btn-login:hover {
                  background-color: #134663;
                  transform: translateY(-1px);
              }
              
              .alert {
                  border-radius: 8px;
                  margin-bottom: 1rem;
              }
              
              .form-floating > label {
                  color: #6c757d;
              }
              
              .form-floating > .form-control:focus ~ label,
              .form-floating > .form-control:not(:placeholder-shown) ~ label {
                  color: #17537bff;
              }
          </style>
      </head>
      <body>
          <div class="login-container">
              <div class="login-card">
                  <!-- Logo -->
                  <img src="https://github.com/taq-community/logo/blob/main/logo_color_high_res.png?raw=true" alt="Logo" class="login-logo">
                  
                  <!-- Error message (if any) -->
                  <div th:if="${param.error}" class="alert alert-danger" role="alert">
                      <small>Invalid username or password</small>
                  </div>
                  
                  <!-- Logout message (if any) -->
                  <div th:if="${param.logout}" class="alert alert-success" role="alert">
                      <small>You have been logged out</small>
                  </div>
                  
                  <!-- Login Form -->
                  <form th:action="@{/login}" method="post">
                      <!-- Username Field -->
                      <div class="form-floating mb-3">
                          <input type="text" 
                                class="form-control" 
                                id="username" 
                                name="username" 
                                placeholder="Username" 
                                required 
                                autofocus>
                          <label for="username">Username</label>
                      </div>
                      
                      <!-- Password Field -->
                      <div class="form-floating mb-3">
                          <input type="password" 
                                class="form-control" 
                                id="password" 
                                name="password" 
                                placeholder="Password" 
                                required>
                          <label for="password">Password</label>
                      </div>
                      
                      <!-- Login Button -->
                      <button type="submit" class="btn btn-primary btn-login">
                          Sign In
                      </button>
                  </form>
              </div>
          </div>
          
          <!-- Bootstrap 5 JS (Optional - for enhanced functionality) -->
          <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
      </body>
      </html>
logging:
  file:
    name: /var/log/shinyproxy/shinyproxy.log

runcmd:
  # Ensure Docker is enabled and running
  - systemctl enable --now docker

  # Download & install the ShinyProxy .deb (3.2.0 here; adjust as needed)
  - wget -O /tmp/shinyproxy_3.2.0_amd64.deb https://www.shinyproxy.io/downloads/shinyproxy_3.2.0_amd64.deb
  - apt-get install -y /tmp/shinyproxy_3.2.0_amd64.deb
  - rm -rf /etc/shinyproxy/application.yml
  - mv /etc/shinyproxy/application_deploy.yml /etc/shinyproxy/application.yml 

  # Create ShinyProxy log directory
  - mkdir -p /var/log/shinyproxy/container-logs
  - chown -R shinyproxy:shinyproxy /var/log/shinyproxy
  - chmod -R 0755 /var/log/shinyproxy

  # Restart ShinyProxy so it picks up group membership and config
  - systemctl restart shinyproxy
  
  # Clone, build, push barqueShinyAp on local repo
  - mkdir /docker-build
  - git clone --recurse-submodules https://github.com/taq-community/barqueShinyApp.git /docker-build/barqueShinyApp
  - cd /docker-build/barqueShinyApp && docker build . -t barque-app:prod && cd

  # Load nginx conf
  - ln -sf /etc/nginx/sites-available/shinyproxy /etc/nginx/sites-enabled/shinyproxy
  - rm -f /etc/nginx/sites-enabled/default
  - nginx -t && systemctl reload nginx
  - systemctl restart shinyproxy
  
  # Firewall
  - sudo ufw allow 22/tcp
  - sudo ufw allow 80/tcp
  - sudo ufw allow 443/tcp
  - sudo ufw enable
  
  # SSL certificate
  - sudo certbot --nginx -d cloud.taq.info -m steve.vissault@inrs.ca --agree-tos --no-eff-email -n
  - systemctl restart nginx
  